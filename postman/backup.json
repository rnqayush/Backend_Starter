{
	"info": {
		"_postman_id": "multi-vendor-complete-api",
		"name": "Multi-Vendor Backend - Complete API Collection",
		"description": "Complete Postman collection for Multi-Vendor Backend API with all endpoints including Authentication, Vendors, Products, Hotels, and Bookings",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "multi-vendor-backend"
	},
	"item": [
		{
			"name": "üîê Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.token) {",
									"        pm.environment.set('authToken', response.data.token);",
									"        pm.environment.set('userId', response.data.user.id);",
									"        pm.environment.set('userRole', response.data.user.role);",
									"    }",
									"}",
									"",
									"pm.test('Status code is 201', function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test('Response has success status', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql('success');",
									"});",
									"",
									"pm.test('Response contains user data', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.have.property('user');",
									"    pm.expect(jsonData.data).to.have.property('token');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"{{$randomFullName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"Password123!\",\n    \"role\": \"customer\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a new user account. Available roles: customer, vendor, admin"
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.token) {",
									"        pm.environment.set('authToken', response.data.token);",
									"        pm.environment.set('userId', response.data.user.id);",
									"        pm.environment.set('userRole', response.data.user.role);",
									"    }",
									"}",
									"",
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success status', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql('success');",
									"});",
									"",
									"pm.test('Response contains token', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.data).to.have.property('token');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"Password123!\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login with existing user credentials"
					},
					"response": []
				},
				{
					"name": "Logout User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test('Response has success status', function () {",
									"    const jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql('success');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						},
						"description": "Logout current user (requires authentication)"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints for user registration, login, and logout"
		},
		{
			"name": "üè™ Vendors",
			"item": [
				{
					"name": "Get All Vendors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/vendors?page=1&limit=10&category=all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"vendors"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "category",
									"value": "all"
								}
							]
						},
						"description": "Get all vendors with pagination and filtering"
					},
					"response": []
				},
				{
					"name": "Get Featured Vendors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/vendors/featured",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"vendors",
								"featured"
							]
						},
						"description": "Get featured vendors"
					},
					"response": []
				},
				{
					"name": "Search Vendors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/vendors/search?q=hotel&location=mumbai",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"vendors",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "hotel"
								},
								{
									"key": "location",
									"value": "mumbai"
								}
							]
						},
						"description": "Search vendors by name, category, or location"
					},
					"response": []
				},
				{
					"name": "Get Vendors by Category",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/vendors/category/hotel",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"vendors",
								"category",
								"hotel"
							]
						},
						"description": "Get vendors by specific category"
					},
					"response": []
				},
				{
					"name": "Get Vendor by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/vendors/{{vendorId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"vendors",
								"{{vendorId}}"
							]
						},
						"description": "Get specific vendor details"
					},
					"response": []
				},
				{
					"name": "Create Vendor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"businessName\": \"{{$randomCompanyName}}\",\n    \"category\": \"hotel\",\n    \"description\": \"Premium hotel services with excellent amenities\",\n    \"contactInfo\": {\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"email\": \"{{$randomEmail}}\",\n        \"website\": \"https://{{$randomDomainName}}\"\n    },\n    \"address\": {\n        \"street\": \"{{$randomStreetAddress}}\",\n        \"city\": \"{{$randomCity}}\",\n        \"state\": \"{{$randomState}}\",\n        \"zipCode\": \"{{$randomZipCode}}\",\n        \"country\": \"India\"\n    },\n    \"businessHours\": {\n        \"monday\": {\"open\": \"09:00\", \"close\": \"18:00\"},\n        \"tuesday\": {\"open\": \"09:00\", \"close\": \"18:00\"},\n        \"wednesday\": {\"open\": \"09:00\", \"close\": \"18:00\"},\n        \"thursday\": {\"open\": \"09:00\", \"close\": \"18:00\"},\n        \"friday\": {\"open\": \"09:00\", \"close\": \"18:00\"},\n        \"saturday\": {\"open\": \"10:00\", \"close\": \"16:00\"},\n        \"sunday\": {\"closed\": true}\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/vendors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"vendors"
							]
						},
						"description": "Create a new vendor (requires authentication)"
					},
					"response": []
				}
			],
			"description": "Vendor management endpoints"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{authToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:5000",
			"type": "string"
		}
	]
}
