{
  "info": {
    "_postman_id": "complete-multi-vendor-api",
    "name": "Complete Multi-Vendor Backend API",
    "description": "Complete Postman collection with ALL 44 endpoints for Multi-Vendor Backend API including Authentication, Vendors, Products, Hotels, and Bookings",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "multi-vendor-backend-complete"
  },
  "item": [
    {
      "name": "\ud83d\udd10 Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.token) {",
                  "        pm.environment.set('authToken', response.data.token);",
                  "        pm.environment.set('userId', response.data.user.id);",
                  "        pm.environment.set('userRole', response.data.user.role);",
                  "        console.log('\u2705 Token saved:', response.data.token.substring(0, 20) + '...');",
                  "    }",
                  "}",
                  "",
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response has success status', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql('success');",
                  "});",
                  "",
                  "pm.test('Response contains user data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.have.property('user');",
                  "    pm.expect(jsonData.data).to.have.property('token');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"{{$randomFullName}}\",\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"Password123!\",\n    \"role\": \"customer\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "register"
              ]
            },
            "description": "Register a new user account. Available roles: customer, vendor, admin"
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.token) {",
                  "        pm.environment.set('authToken', response.data.token);",
                  "        pm.environment.set('userId', response.data.user.id);",
                  "        pm.environment.set('userRole', response.data.user.role);",
                  "        console.log('\u2705 Login successful, token saved');",
                  "    }",
                  "}",
                  "",
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has success status', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql('success');",
                  "});",
                  "",
                  "pm.test('Response contains token', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.have.property('token');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"Password123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "login"
              ]
            },
            "description": "Login with existing user credentials"
          },
          "response": []
        },
        {
          "name": "Logout User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has success status', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql('success');",
                  "});",
                  "",
                  "// Clear token on successful logout",
                  "if (pm.response.code === 200) {",
                  "    pm.environment.unset('authToken');",
                  "    console.log('\u2705 Logged out, token cleared');",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/logout",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "logout"
              ]
            },
            "description": "Logout current user (requires authentication)"
          },
          "response": []
        }
      ],
      "description": "Authentication endpoints for user registration, login, and logout"
    },
    {
      "name": "\ud83c\udfea Vendors",
      "item": [
        {
          "name": "Get All Vendors",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has vendors array', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.have.property('vendors');",
                  "    pm.expect(jsonData.data.vendors).to.be.an('array');",
                  "});",
                  "",
                  "// Save first vendor ID for other tests",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.data.vendors && response.data.vendors.length > 0) {",
                  "        pm.environment.set('vendorId', response.data.vendors[0]._id);",
                  "        console.log('\u2705 Vendor ID saved:', response.data.vendors[0]._id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/vendors?page=1&limit=10&category=all",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "vendors"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "category",
                  "value": "all"
                }
              ]
            },
            "description": "Get all vendors with pagination and filtering"
          },
          "response": []
        },
        {
          "name": "Create Vendor",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response has vendor data', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data).to.have.property('vendor');",
                  "});",
                  "",
                  "// Save vendor ID for other tests",
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.vendor) {",
                  "        pm.environment.set('vendorId', response.data.vendor._id);",
                  "        console.log('\u2705 New vendor created, ID saved:', response.data.vendor._id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"businessName\": \"{{$randomCompanyName}}\",\n    \"category\": \"hotel\",\n    \"description\": \"Premium hotel services with excellent amenities and world-class hospitality\",\n    \"contactInfo\": {\n        \"phone\": \"{{$randomPhoneNumber}}\",\n        \"email\": \"{{$randomEmail}}\",\n        \"website\": \"https://{{$randomDomainName}}\"\n    },\n    \"address\": {\n        \"street\": \"{{$randomStreetAddress}}\",\n        \"city\": \"{{$randomCity}}\",\n        \"state\": \"{{$randomState}}\",\n        \"zipCode\": \"{{$randomZipCode}}\",\n        \"country\": \"India\"\n    },\n    \"businessHours\": {\n        \"monday\": \"9:00 AM - 6:00 PM\",\n        \"tuesday\": \"9:00 AM - 6:00 PM\",\n        \"wednesday\": \"9:00 AM - 6:00 PM\",\n        \"thursday\": \"9:00 AM - 6:00 PM\",\n        \"friday\": \"9:00 AM - 6:00 PM\",\n        \"saturday\": \"10:00 AM - 4:00 PM\",\n        \"sunday\": \"Closed\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/vendors",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "vendors"
              ]
            },
            "description": "Create a new vendor (requires authentication)"
          },
          "response": []
        },
        {
          "name": "Get Featured Vendors",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/vendors/featured",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "vendors",
                "featured"
              ]
            },
            "description": "Get featured vendors"
          },
          "response": []
        },
        {
          "name": "Search Vendors",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/vendors/search?q=hotel&location=mumbai",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "vendors",
                "search"
              ],
              "query": [
                {
                  "key": "q",
                  "value": "hotel"
                },
                {
                  "key": "location",
                  "value": "mumbai"
                }
              ]
            },
            "description": "Search vendors by name, category, or location"
          },
          "response": []
        },
        {
          "name": "Get Vendors by Category",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/vendors/category/hotel",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "vendors",
                "category",
                "hotel"
              ]
            },
            "description": "Get vendors by specific category"
          },
          "response": []
        },
        {
          "name": "Get Vendor by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/vendors/{{vendorId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "vendors",
                "{{vendorId}}"
              ]
            },
            "description": "Get specific vendor details"
          },
          "response": []
        },
        {
          "name": "Get Vendor Dashboard",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/vendors/dashboard/stats",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "vendors",
                "dashboard",
                "stats"
              ]
            },
            "description": "Get vendor dashboard statistics (vendor only)"
          },
          "response": []
        },
        {
          "name": "Update Vendor",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"businessName\": \"Updated Business Name\",\n    \"description\": \"Updated description with new services\",\n    \"contactInfo\": {\n        \"phone\": \"+91-9876543210\",\n        \"email\": \"updated@example.com\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/vendors/{{vendorId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "vendors",
                "{{vendorId}}"
              ]
            },
            "description": "Update vendor information"
          },
          "response": []
        },
        {
          "name": "Update Vendor Status (Admin)",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"status\": \"approved\",\n    \"reason\": \"All documents verified successfully\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/vendors/{{vendorId}}/status",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "vendors",
                "{{vendorId}}",
                "status"
              ]
            },
            "description": "Update vendor status (admin only)"
          },
          "response": []
        }
      ],
      "description": "Vendor management endpoints"
    },
    {
      "name": "\ud83d\udecd\ufe0f Products",
      "item": [
        {
          "name": "Get All Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products?page=1&limit=10",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "products"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get all products with pagination"
          },
          "response": []
        },
        {
          "name": "Get Featured Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/featured",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "products",
                "featured"
              ]
            },
            "description": "Get featured products"
          },
          "response": []
        },
        {
          "name": "Get Products on Sale",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/sale",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "products",
                "sale"
              ]
            },
            "description": "Get products currently on sale"
          },
          "response": []
        },
        {
          "name": "Search Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/search?q=laptop&category=electronics",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "products",
                "search"
              ],
              "query": [
                {
                  "key": "q",
                  "value": "laptop"
                },
                {
                  "key": "category",
                  "value": "electronics"
                }
              ]
            },
            "description": "Search products by name and category"
          },
          "response": []
        },
        {
          "name": "Get Products by Category",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/category/electronics",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "products",
                "category",
                "electronics"
              ]
            },
            "description": "Get products by specific category"
          },
          "response": []
        },
        {
          "name": "Get Products by Vendor",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/vendor/{{vendorId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "products",
                "vendor",
                "{{vendorId}}"
              ]
            },
            "description": "Get all products from a specific vendor"
          },
          "response": []
        },
        {
          "name": "Get Product by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/products/{{productId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "products",
                "{{productId}}"
              ]
            },
            "description": "Get specific product details"
          },
          "response": []
        },
        {
          "name": "Create Product",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.product) {",
                  "        pm.environment.set('productId', response.data.product._id);",
                  "        console.log('\u2705 Product created, ID saved:', response.data.product._id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Premium Wireless Headphones\",\n    \"description\": \"High-quality wireless headphones with noise cancellation\",\n    \"price\": 299.99,\n    \"category\": \"electronics\",\n    \"stock\": 50,\n    \"images\": [\n        \"https://example.com/headphones1.jpg\"\n    ],\n    \"specifications\": {\n        \"brand\": \"TechBrand\",\n        \"model\": \"WH-1000XM5\",\n        \"color\": \"Black\",\n        \"warranty\": \"2 years\"\n    }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/products",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "products"
              ]
            },
            "description": "Create a new product (vendor only)"
          },
          "response": []
        },
        {
          "name": "Update Product",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Premium Wireless Headphones\",\n    \"description\": \"Updated description with new features\",\n    \"price\": 279.99,\n    \"stock\": 75\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/products/{{productId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "products",
                "{{productId}}"
              ]
            },
            "description": "Update product information"
          },
          "response": []
        },
        {
          "name": "Delete Product",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/products/{{productId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "products",
                "{{productId}}"
              ]
            },
            "description": "Delete a product"
          },
          "response": []
        },
        {
          "name": "Update Stock",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"stock\": 100,\n    \"operation\": \"set\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/products/{{productId}}/stock",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "products",
                "{{productId}}",
                "stock"
              ]
            },
            "description": "Update product stock quantity"
          },
          "response": []
        }
      ],
      "description": "Product management endpoints"
    },
    {
      "name": "\ud83c\udfe8 Hotels",
      "item": [
        {
          "name": "Get All Hotels",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/hotels?page=1&limit=10",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "hotels"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get all hotels with pagination"
          },
          "response": []
        },
        {
          "name": "Get Featured Hotels",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/hotels/featured",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "hotels",
                "featured"
              ]
            },
            "description": "Get featured hotels"
          },
          "response": []
        },
        {
          "name": "Search Hotels",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/hotels/search?q=luxury&city=mumbai&checkIn=2024-08-15&checkOut=2024-08-20",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "hotels",
                "search"
              ],
              "query": [
                {
                  "key": "q",
                  "value": "luxury"
                },
                {
                  "key": "city",
                  "value": "mumbai"
                },
                {
                  "key": "checkIn",
                  "value": "2024-08-15"
                },
                {
                  "key": "checkOut",
                  "value": "2024-08-20"
                }
              ]
            },
            "description": "Search hotels by name, city, and dates"
          },
          "response": []
        },
        {
          "name": "Get Hotels by City",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/hotels/city/mumbai",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "hotels",
                "city",
                "mumbai"
              ]
            },
            "description": "Get hotels in a specific city"
          },
          "response": []
        },
        {
          "name": "Get Hotel by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/hotels/{{hotelId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "hotels",
                "{{hotelId}}"
              ]
            },
            "description": "Get specific hotel details"
          },
          "response": []
        },
        {
          "name": "Create Hotel",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.hotel) {",
                  "        pm.environment.set('hotelId', response.data.hotel._id);",
                  "        console.log('\u2705 Hotel created, ID saved:', response.data.hotel._id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Grand Palace Hotel\",\n    \"description\": \"Luxury 5-star hotel with world-class amenities\",\n    \"address\": {\n        \"street\": \"123 Main Street\",\n        \"city\": \"Mumbai\",\n        \"state\": \"Maharashtra\",\n        \"zipCode\": \"400001\",\n        \"country\": \"India\"\n    },\n    \"contactInfo\": {\n        \"phone\": \"+91-22-12345678\",\n        \"email\": \"info@grandpalace.com\",\n        \"website\": \"https://grandpalace.com\"\n    },\n    \"amenities\": [\n        \"WiFi\",\n        \"Pool\",\n        \"Gym\",\n        \"Spa\",\n        \"Restaurant\",\n        \"Room Service\"\n    ],\n    \"starRating\": 5,\n    \"checkInTime\": \"15:00\",\n    \"checkOutTime\": \"11:00\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/hotels",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "hotels"
              ]
            },
            "description": "Create a new hotel (vendor only)"
          },
          "response": []
        },
        {
          "name": "Update Hotel",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Updated Grand Palace Hotel\",\n    \"description\": \"Updated luxury hotel with new amenities\",\n    \"amenities\": [\n        \"WiFi\",\n        \"Pool\",\n        \"Gym\",\n        \"Spa\",\n        \"Restaurant\",\n        \"Room Service\",\n        \"Conference Hall\"\n    ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/hotels/{{hotelId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "hotels",
                "{{hotelId}}"
              ]
            },
            "description": "Update hotel information"
          },
          "response": []
        },
        {
          "name": "Delete Hotel",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/hotels/{{hotelId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "hotels",
                "{{hotelId}}"
              ]
            },
            "description": "Delete a hotel"
          },
          "response": []
        },
        {
          "name": "Add Room",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.room) {",
                  "        pm.environment.set('roomId', response.data.room._id);",
                  "        console.log('\u2705 Room added, ID saved:', response.data.room._id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"roomNumber\": \"101\",\n    \"type\": \"deluxe\",\n    \"price\": 5000,\n    \"capacity\": 2,\n    \"amenities\": [\n        \"AC\",\n        \"TV\",\n        \"WiFi\",\n        \"Mini Bar\"\n    ],\n    \"description\": \"Spacious deluxe room with city view\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/hotels/{{hotelId}}/rooms",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "hotels",
                "{{hotelId}}",
                "rooms"
              ]
            },
            "description": "Add a room to hotel"
          },
          "response": []
        },
        {
          "name": "Update Room",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"price\": 5500,\n    \"amenities\": [\n        \"AC\",\n        \"TV\",\n        \"WiFi\",\n        \"Mini Bar\",\n        \"Balcony\"\n    ],\n    \"description\": \"Updated deluxe room with balcony and city view\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/hotels/{{hotelId}}/rooms/{{roomId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "hotels",
                "{{hotelId}}",
                "rooms",
                "{{roomId}}"
              ]
            },
            "description": "Update room information"
          },
          "response": []
        },
        {
          "name": "Delete Room",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/hotels/{{hotelId}}/rooms/{{roomId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "hotels",
                "{{hotelId}}",
                "rooms",
                "{{roomId}}"
              ]
            },
            "description": "Delete a room from hotel"
          },
          "response": []
        }
      ],
      "description": "Hotel management endpoints"
    },
    {
      "name": "\ud83d\udcc5 Bookings",
      "item": [
        {
          "name": "Create Booking",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.data && response.data.booking) {",
                  "        pm.environment.set('bookingId', response.data.booking._id);",
                  "        console.log('\u2705 Booking created, ID saved:', response.data.booking._id);",
                  "    }",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"hotelId\": \"{{hotelId}}\",\n    \"roomId\": \"{{roomId}}\",\n    \"checkInDate\": \"2024-08-15\",\n    \"checkOutDate\": \"2024-08-20\",\n    \"guests\": 2,\n    \"guestDetails\": {\n        \"name\": \"John Doe\",\n        \"email\": \"john@example.com\",\n        \"phone\": \"+91-9876543210\"\n    },\n    \"specialRequests\": \"Late check-in requested\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookings",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "bookings"
              ]
            },
            "description": "Create a new booking"
          },
          "response": []
        },
        {
          "name": "Get All Bookings",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/bookings?page=1&limit=10",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "bookings"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get all bookings (admin only)"
          },
          "response": []
        },
        {
          "name": "Get User Bookings",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/bookings/my-bookings",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "bookings",
                "my-bookings"
              ]
            },
            "description": "Get current user's bookings"
          },
          "response": []
        },
        {
          "name": "Get Vendor Bookings",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/bookings/vendor-bookings",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "bookings",
                "vendor-bookings"
              ]
            },
            "description": "Get vendor's bookings (vendor only)"
          },
          "response": []
        },
        {
          "name": "Get Booking by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/bookings/{{bookingId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "bookings",
                "{{bookingId}}"
              ]
            },
            "description": "Get specific booking details"
          },
          "response": []
        },
        {
          "name": "Update Booking",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"checkOutDate\": \"2024-08-22\",\n    \"guests\": 3,\n    \"specialRequests\": \"Extra bed required\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookings/{{bookingId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "bookings",
                "{{bookingId}}"
              ]
            },
            "description": "Update booking information"
          },
          "response": []
        },
        {
          "name": "Cancel Booking",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"reason\": \"Change of plans\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookings/{{bookingId}}/cancel",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "bookings",
                "{{bookingId}}",
                "cancel"
              ]
            },
            "description": "Cancel a booking"
          },
          "response": []
        },
        {
          "name": "Confirm Booking",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/bookings/{{bookingId}}/confirm",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "bookings",
                "{{bookingId}}",
                "confirm"
              ]
            },
            "description": "Confirm a booking (vendor only)"
          },
          "response": []
        },
        {
          "name": "Check-in Booking",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/bookings/{{bookingId}}/checkin",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "bookings",
                "{{bookingId}}",
                "checkin"
              ]
            },
            "description": "Check-in a booking (vendor only)"
          },
          "response": []
        },
        {
          "name": "Check-out Booking",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/bookings/{{bookingId}}/checkout",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "bookings",
                "{{bookingId}}",
                "checkout"
              ]
            },
            "description": "Check-out a booking (vendor only)"
          },
          "response": []
        },
        {
          "name": "Add Review",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"rating\": 5,\n    \"comment\": \"Excellent service and beautiful rooms. Highly recommended!\",\n    \"reviewType\": \"hotel\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/bookings/{{bookingId}}/review",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "bookings",
                "{{bookingId}}",
                "review"
              ]
            },
            "description": "Add a review for completed booking"
          },
          "response": []
        }
      ],
      "description": "Booking management endpoints"
    },
    {
      "name": "\u2139\ufe0f API Info",
      "item": [
        {
          "name": "API Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/health",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "health"
              ]
            },
            "description": "Check API health status"
          },
          "response": []
        },
        {
          "name": "API Information",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                ""
              ]
            },
            "description": "Get API information and available endpoints"
          },
          "response": []
        }
      ],
      "description": "API information and health check endpoints"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global pre-request script",
          "console.log('\ud83d\ude80 Making request to:', pm.request.url.toString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script",
          "console.log('\ud83d\udcca Response status:', pm.response.code, pm.response.status);"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "vendorId",
      "value": "",
      "type": "string"
    },
    {
      "key": "productId",
      "value": "",
      "type": "string"
    },
    {
      "key": "hotelId",
      "value": "",
      "type": "string"
    },
    {
      "key": "bookingId",
      "value": "",
      "type": "string"
    },
    {
      "key": "roomId",
      "value": "",
      "type": "string"
    }
  ]
}