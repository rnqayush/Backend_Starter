version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: storebuilder-mongodb
    restart: unless-stopped
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: storebuilder
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - storebuilder-network

  # Redis Cache (optional)
  redis:
    image: redis:7-alpine
    container_name: storebuilder-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - storebuilder-network

  # Backend API
  backend:
    build:
      context: .
      target: production
    container_name: storebuilder-backend
    restart: unless-stopped
    ports:
      - '5000:5000'
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/storebuilder?authSource=admin
      JWT_SECRET: storebuilder_super_secret_jwt_key_2024_production_ready
      JWT_EXPIRES_IN: 7d
      FRONTEND_URL: http://localhost:3000
      REDIS_URL: redis://redis:6379
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - storebuilder-network
    healthcheck:
      test:
        [
          'CMD',
          'node',
          '-e',
          "require('http').get('http://localhost:5000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1); }).on('error', () => { process.exit(1); });",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development Backend (alternative)
  backend-dev:
    build:
      context: .
      target: development
    container_name: storebuilder-backend-dev
    restart: unless-stopped
    ports:
      - '5001:5000'
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/storebuilder?authSource=admin
      JWT_SECRET: storebuilder_super_secret_jwt_key_2024_development
      JWT_EXPIRES_IN: 7d
      FRONTEND_URL: http://localhost:3000
    volumes:
      - .:/app
      - /app/node_modules
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - mongodb
    networks:
      - storebuilder-network
    profiles:
      - development

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: storebuilder-nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - storebuilder-network
    profiles:
      - production

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  storebuilder-network:
    driver: bridge
